<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <!-- Jedis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1000"/> <!--在指定时刻通过pool能够获取到的最大的连接的jedis个数-->
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="1"/> <!--最小的闲置连接数-->
        <property name="maxWaitMillis" value="30000"/> <!-- 阻塞时间，连接池内的连接耗尽时，连接会阻塞，超过了阻塞的时间时会报错-->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <!-- 集群配置 -->
    <!-- 依赖高版本的spring-data-redis -->
    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="3"/>
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="6481"/>

                </bean>
            </set>
        </property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:password="">
        <property name="timeout" value="30000" />
        <property name="usePool" value="true"></property>
        <constructor-arg name="clusterConfig" ref="redisClusterConfiguration"></constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
    </bean>

    <bean name="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <!--<property name="keySerializer" value="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        <property name="hashKeySerializer" value="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        <property name="valueSerializer" value="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        <property name="hashValueSerializer" value="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
    </bean>
</beans>